

-----------------------------------------------------------------
-------------------- Mon 2019-12-16 15:42:36 --------------------
-----------------------------------------------------------------


-----------------------------------------------------------------


Program ID : 0
Execution Stack :
[int v; ref(int) a; v = 10; new a = 22; fork(writeHeap(a, 30); v = 32; print(v); print(readHeap(a))); print(v); print(readHeap(a))]
Symbol Table :
{}
Output :
[]
File Table :
{}
Heap : 
{}

Program ID : 0
Execution Stack :
[ref(int) a; v = 10; new a = 22; fork(writeHeap(a, 30); v = 32; print(v); print(readHeap(a))); print(v); print(readHeap(a)), int v]
Symbol Table :
{}
Output :
[]
File Table :
{}
Heap : 
{}

Program ID : 0
Execution Stack :
[ref(int) a; v = 10; new a = 22; fork(writeHeap(a, 30); v = 32; print(v); print(readHeap(a))); print(v); print(readHeap(a))]
Symbol Table :
{v=0}
Output :
[]
File Table :
{}
Heap : 
{}

Program ID : 0
Execution Stack :
[v = 10; new a = 22; fork(writeHeap(a, 30); v = 32; print(v); print(readHeap(a))); print(v); print(readHeap(a)), ref(int) a]
Symbol Table :
{v=0}
Output :
[]
File Table :
{}
Heap : 
{}

Program ID : 0
Execution Stack :
[v = 10; new a = 22; fork(writeHeap(a, 30); v = 32; print(v); print(readHeap(a))); print(v); print(readHeap(a))]
Symbol Table :
{a=(0, int), v=0}
Output :
[]
File Table :
{}
Heap : 
{}

Program ID : 0
Execution Stack :
[new a = 22; fork(writeHeap(a, 30); v = 32; print(v); print(readHeap(a))); print(v); print(readHeap(a)), v = 10]
Symbol Table :
{a=(0, int), v=0}
Output :
[]
File Table :
{}
Heap : 
{}

Program ID : 0
Execution Stack :
[new a = 22; fork(writeHeap(a, 30); v = 32; print(v); print(readHeap(a))); print(v); print(readHeap(a))]
Symbol Table :
{a=(0, int), v=10}
Output :
[]
File Table :
{}
Heap : 
{}

Program ID : 0
Execution Stack :
[fork(writeHeap(a, 30); v = 32; print(v); print(readHeap(a))); print(v); print(readHeap(a)), new a = 22]
Symbol Table :
{a=(0, int), v=10}
Output :
[]
File Table :
{}
Heap : 
{}

Program ID : 0
Execution Stack :
[fork(writeHeap(a, 30); v = 32; print(v); print(readHeap(a))); print(v); print(readHeap(a))]
Symbol Table :
{a=(1, int), v=10}
Output :
[]
File Table :
{}
Heap : 
{1=22}

Program ID : 0
Execution Stack :
[print(v); print(readHeap(a)), fork(writeHeap(a, 30); v = 32; print(v); print(readHeap(a)))]
Symbol Table :
{a=(1, int), v=10}
Output :
[]
File Table :
{}
Heap : 
{1=22}

Program ID : 0
Execution Stack :
[print(v); print(readHeap(a))]
Symbol Table :
{a=(1, int), v=10}
Output :
[]
File Table :
{}
Heap : 
{1=22}

Program ID : 1
Execution Stack :
[writeHeap(a, 30); v = 32; print(v); print(readHeap(a))]
Symbol Table :
{a=(1, int), v=10}
Output :
[]
File Table :
{}
Heap : 
{1=22}

Program ID : 0
Execution Stack :
[print(readHeap(a)), print(v)]
Symbol Table :
{a=(1, int), v=10}
Output :
[]
File Table :
{}
Heap : 
{1=22}

Program ID : 1
Execution Stack :
[v = 32; print(v); print(readHeap(a)), writeHeap(a, 30)]
Symbol Table :
{a=(1, int), v=10}
Output :
[10]
File Table :
{}
Heap : 
{1=22}

Program ID : 0
Execution Stack :
[print(readHeap(a))]
Symbol Table :
{a=(1, int), v=10}
Output :
[10]
File Table :
{}
Heap : 
{1=22}

Program ID : 1
Execution Stack :
[v = 32; print(v); print(readHeap(a))]
Symbol Table :
{a=(1, int), v=10}
Output :
[10, 22]
File Table :
{}
Heap : 
{1=30}

Program ID : 1
Execution Stack :
[print(v); print(readHeap(a)), v = 32]
Symbol Table :
{a=(1, int), v=10}
Output :
[10, 22]
File Table :
{}
Heap : 
{1=30}

Program ID : 1
Execution Stack :
[print(v); print(readHeap(a))]
Symbol Table :
{a=(1, int), v=32}
Output :
[10, 22]
File Table :
{}
Heap : 
{1=30}

Program ID : 1
Execution Stack :
[print(readHeap(a)), print(v)]
Symbol Table :
{a=(1, int), v=32}
Output :
[10, 22]
File Table :
{}
Heap : 
{1=30}

Program ID : 1
Execution Stack :
[print(readHeap(a))]
Symbol Table :
{a=(1, int), v=32}
Output :
[10, 22, 32]
File Table :
{}
Heap : 
{1=30}

